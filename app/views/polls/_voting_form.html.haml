%form#regForm{:action => poll_completions_path(@poll), method: :post, remote: true}
- @questions.order(position: :asc).each do |question|
  .tab
    = form_tag votes_path, method: :post, remote: true, id: 'voting_form', class: 'votingForm' do
      %p.text-2xl.py-1.text-md.font-semibold.text-gray-700= question.topic
      = hidden_field_tag 'question[id]', question.id
      .inputs
        = render partial: 'polls/vote_option', collection: question.vote_options, as: :option
      %p
        %b
          Total votes: #{question.votes_summary}
      - if current_user.voted_for?(question)
        %p You have already voted!
      -# - else
      -#   = submit_tag 'Vote', class: 'btn btn-lg btn-primary'
  .tab
    .text-2xl= question.comment
%div{:style => "overflow:auto;"}
  %div{:style => "float:right;"}
    -# %button#prevBtn.button.w-full.flex.justify-center.mt-4.py-2.px-4.border.border-transparent.rounded-md.shadow-sm.text-sm.font-medium.text-white.bg-blue-600.hover:bg-blue-700.focus:outline-none.focus:ring-2.focus:ring-offset-2.focus:ring-blue-500{:onclick => "nextPrev(-1)", :type => "button"} Previous
    %button#nextBtn.button.w-full.flex.justify-center.mt-4.py-2.px-4.border.border-transparent.rounded-md.shadow-sm.text-sm.font-medium.text-white.bg-blue-600.hover:bg-blue-700.focus:outline-none.focus:ring-2.focus:ring-offset-2.focus:ring-blue-500{:onclick => "nextPrev(1)", :type => "button"} Next
/ Circles which indicates the steps of the form:
- @steps.each do |step|
  %span.step



:javascript
  var currentTab = 0; // Current tab is set to be the first tab (0)
  showTab(currentTab);
  
  function showTab(n) {
    // This function will display the specified tab of the form...
    var x = document.getElementsByClassName("tab");
    x[n].style.display = "block";
    //... and fix the Previous/Next buttons:
    // if (n == 0) {
    //   document.getElementById("prevBtn").style.display = "none";
    // } else {
    //   document.getElementById("prevBtn").style.display = "inline";
    // }
    if (n == (x.length - 1)) {
      document.getElementById("nextBtn").innerHTML = "Submit";
    } else {
      document.getElementById("nextBtn").innerHTML = "Next";
    }
    //... and run a function that will display the correct step indicator:
    fixStepIndicator(n)
  }

  function nextPrev(n) {
    // This function will figure out which tab to display
    var x = document.getElementsByClassName("tab");
    // Exit the function if any field in the current tab is invalid:
    if (n == 1 && !validateForm()) return false;
    // Hide the current tab:
    x[currentTab].style.display = "none";
    // Increase or decrease the current tab by 1:
    currentTab = currentTab + n;
    // if you have reached the end of the form...
    if (currentTab >= x.length) {
      // ... the form gets submitted:
      document.getElementById("regForm").submit();
      return false;
    }
    // Otherwise, display the correct tab:
    showTab(currentTab);
  }

  function validateForm() {
    var x, y, i, valid = true;
    x = document.getElementsByClassName("tab");
    y = x[currentTab].getElementsByTagName("input");
    z = x[currentTab].getElementsByClassName("votingForm")
    for (i = 0; i < y.length; i++) {
      if (!y[i].checked) {
        valid = false;
      } if (y[i].checked) {
        $(z).trigger('submit.rails');
        document.getElementsByClassName("step")[currentTab].className += " finish";
        valid = true
        return true
      }
    }
    if (valid) {
      document.getElementsByClassName("step")[currentTab].className += " finish";
    }
    return valid;
  }

  function fixStepIndicator(n) {
    // This function removes the "active" class of all steps...
    var i, x = document.getElementsByClassName("step");
    for (i = 0; i < x.length; i++) {
      x[i].className = x[i].className.replace(" active", "");
    }
    //... and adds the "active" class on the current step:
    x[n].className += " active";
  } 